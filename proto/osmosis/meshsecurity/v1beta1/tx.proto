syntax = "proto3";
package osmosis.meshsecurity.v1beta1;

import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";
import "gogoproto/gogo.proto";
import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/osmosis-labs/mesh-security-sdk/x/meshsecurity/types";
option (gogoproto.goproto_getters_all) = false;

// Msg defines the wasm Msg service.
service Msg {
  // SetVirtualStakingMaxCap creates or updates a maximum cap limit for virtual
  // staking coins
  rpc SetVirtualStakingMaxCap(MsgSetVirtualStakingMaxCap)
      returns (MsgSetVirtualStakingMaxCapResponse);

  rpc Delegate(MsgDelegate) returns (MsgDelegateResponse);

  rpc Undelegate(MsgUndelegate) returns (MsgUndelegateResponse);
}

// MsgSetVirtualStakingMaxCap creates or updates a maximum cap limit for virtual
// staking coins to the given contract.
message MsgSetVirtualStakingMaxCap {
  option (amino.name) = "meshsecurity/MsgSetVirtualStakingMaxCap";
  option (cosmos.msg.v1.signer) = "authority";

  // Authority is the address that controls the module (defaults to x/gov unless
  // overwritten).
  string authority = 1;

  // Contract is the address of the smart contract that is given permission
  // do virtual staking which includes minting and burning staking tokens.
  string contract = 2;

  // MaxCap is the limit up this the virtual tokens can be minted.
  cosmos.base.v1beta1.Coin max_cap = 3 [ (gogoproto.nullable) = false ];
}

// MsgSetVirtualStakingMaxCap returns result data.
message MsgSetVirtualStakingMaxCapResponse {}

message MsgDelegate {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string                   delegator_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string                   validator_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  cosmos.base.v1beta1.Coin amount            = 3 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}
message MsgDelegateResponse {}

message MsgUndelegate {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string                   delegator_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string                   validator_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  cosmos.base.v1beta1.Coin amount            = 3 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUndelegateResponse defines the Msg/Undelegate response type.
message MsgUndelegateResponse {
}
