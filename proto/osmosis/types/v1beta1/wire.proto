syntax = "proto3";
package osmosis.types.v1beta1;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "amino/amino.proto";
import "cosmos/staking/v1beta1/staking.proto";
import "tendermint/abci/types.proto";


option go_package = "github.com/osmosis-labs/mesh-security-sdk/x/types";
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.equal_all) = false;

// enum PipedValsetOperation
enum PipedValsetOperation {
    UNSPECIFIED = 0;
    VALIDATOR_BONDED = 1;
    VALIDATOR_UNBONDED = 2;
    VALIDATOR_JAILED = 3;
    VALIDATOR_TOMBSTONED = 4;
    VALIDATOR_UNJAILED = 5;
    VALIDATOR_MODIFIED = 6;
    VALIDATOR_SLASHED = 7;
}

// SlashInfo defines info event from slashing
message SlashInfo {
  int64 infraction_height = 2;
  int64 power = 3;
  string total_slash_amount = 4;
  string slash_fraction = 5;
  int64 time_infraction = 6;
}

// ConsumerPacketData contains a consumer packet data and a type tag
message ConsumerPacketData {
  PipedValsetOperation type = 1;

  oneof data {
    SlashInfo slashPacketData = 2;
  }
}

// InfractionType indicates the infraction type a validator committed.
// Note ccv.InfractionType to maintain compatibility between ICS versions
// using different versions of the cosmos-sdk and ibc-go modules.
enum InfractionType {
  option (gogoproto.goproto_enum_prefix) = false;

  // UNSPECIFIED defines an empty infraction type.
  INFRACTION_TYPE_UNSPECIFIED = 0 [(gogoproto.enumvalue_customname) = "InfractionEmpty"];
  // DOUBLE_SIGN defines a validator that double-signs a block.
  INFRACTION_TYPE_DOUBLE_SIGN = 1 [(gogoproto.enumvalue_customname) = "DoubleSign"];
  // DOWNTIME defines a validator that missed signing too many blocks.
  INFRACTION_TYPE_DOWNTIME = 2 [(gogoproto.enumvalue_customname) = "Downtime"];
}
